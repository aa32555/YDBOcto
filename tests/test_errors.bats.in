#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "invalid Octo GLD" {
  export ydb_gbldir="does_not_exist.gld"
  run octo <<OCTO
SELECT * FROM names WHERE lastName = "Cool";
OCTO
  [[ "$output" =~ "ZGBLDIRACC" ]]
}

@test "Feature not implemented: between_predicate" {
  octo <<OCTO 2>&1 | tee output.txt
select * from names where id between 1 and 10;
select * from names where id between 1+1 and 10;
select * from names where id between id+10 and 10;
OCTO
  verify_output TERR000 output.txt
}

@test "Feature not implemented: exists_predicate" {
  octo <<OCTO 2>&1 | tee output.txt
select * from names where exists (select * from names);
OCTO
  verify_output TERR001 output.txt
}

@test "Octo can recover from error (e.g. DIVBYZERO)" {
  octo <<OCTO 2>&1 | tee output.txt
select 1/0 from names;
select * from names;
OCTO
  verify_output TERR002 output.txt noinfo nodebug
}

@test "Octo issues FATAL error for missing input file" {
  octo -f missing.sql 2>&1 | tee output.txt
  verify_output TERR003 output.txt noinfo nodebug
}

@test "Octo doesn't generate core file for fatal errors" {
  octo -f missing.sql 2>&1 | tee output.txt
  verify_output TERR003 output.txt noinfo nodebug
  run find "core*"
  [[ $status -eq 1 ]]
}

@test "Rocto can recover from error (e.g. DIVBYZERO)" {
  load_fixture default_user.zwr
  test_port=$(start_rocto 1443)
  run_psql $test_port <<OCTO 2>&1 | tee output.txt
select 1/0 from names;
select * from names;
OCTO
  stop_rocto
  verify_output TERR004 output.txt noinfo nodebug
}

