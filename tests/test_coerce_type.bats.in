#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "coerce string to INTEGER" {
  octo <<OCTO 2>&1 | tee output.txt
select "hello"::integer from names limit 1;
select * from names where "hello"::integer = names.id
OCTO
  verify_output TCT000 output.txt
}

@test "coerce cannonical number string to INTEGER" {
  octo <<OCTO 2>&1 | tee output.txt
select "1"::integer from names limit 1;
select "1.1"::integer from names limit 1;
select * from names where "1"::integer = names.id;
select * from names where "1.1"::integer = names.id;
OCTO
  verify_output TCT001 output.txt
}

@test "coerce NUMERIC type to INTEGER" {
  octo <<OCTO 2>&1 | tee output.txt
select 1.1::integer from names limit 1;
select * from names where 1.1::integer = names.id
OCTO
  verify_output TCT002 output.txt
}

@test "coerce string to NUMERIC" {
  octo <<OCTO 2>&1 | tee output.txt
select "hello"::numeric from names limit 1;
select * from names where "hello"::numeric = names.id
OCTO
  verify_output TCT003 output.txt
}

@test "coerce cannonical number string to NUMERIC" {
  octo <<OCTO 2>&1 | tee output.txt
select "1"::numeric from names limit 1;
select "1.1"::numeric from names limit 1;
select * from names where "1"::numeric = names.id;
select * from names where "1.1"::numeric = names.id;
OCTO
  verify_output TCT004 output.txt
}

@test "coerce INTEGER type to INTEGER" {
  octo <<OCTO 2>&1 | tee output.txt
select 1::numeric from names limit 1;
select * from names where 1::numeric = names.id
OCTO
  verify_output TCT005 output.txt
}

@test "compare integer and numeric types" {
  octo <<OCTO 2>&1 | tee output.txt
select * from names where 1::integer = 1::numeric limit 1;
OCTO
  verify_output TCT006 output.txt
}

@test "test coerce of functions" {
  yottadb -run ^%XCMD 'set ^%ydboctoocto("functions","DOLLARZWRITE")="$ZWRITE"'
  octo <<OCTO 2>&1 | tee output.txt
select dollarzwrite(id)::integer from names limit 1;
OCTO
  verify_output TCT007 output.txt
}

@test "test 2 coerced functions generate different M files" {
  yottadb -run ^%XCMD 'set ^%ydboctoocto("functions","DOLLARZWRITE")="$ZWRITE"'
  yottadb -run ^%XCMD 'set ^%ydboctoocto("functions","DOLLARREV")="$REVERSE"'
  octo <<OCTO 2>&1 | tee output.txt
select dollarzwrite(id)::integer from names limit 1;
select dollarrev(id)::integer from names limit 1;
OCTO
  echo "Listing of M files, should see 2" | tee -a output.txt
  ls -1 _ydboctoP*.m 2>&1 | tee -a output.txt
  verify_output TCT008 output.txt
}
