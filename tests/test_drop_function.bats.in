#################################################################
#								#
# Copyright (c) 2020 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
	init_test
	createdb
	load_fixture names.sql
	load_fixture names.zwr
}

@test "TDF000 : OCTO345 : DROP FUNCTION works with existing functions (ABS)" {
	load_fixture TDF000.sql subtest novv
	yottadb -r CHECKFUNCDELETE ABS 2>&1 | tee -a output.txt	# Confirm the relevant database nodes for the function were deleted
	verify_output TDF000 output.txt noinfo nodebug
}

@test "TDF001 : OCTO345 : DROP FUNCTION works with new function" {
	load_fixture TDF001.sql subtest novv
	yottadb -r CHECKFUNCDELETE DOLLARZWRITE 2>&1 | tee -a output.txt	# Confirm the relevant database nodes for the function were deleted
	verify_output TDF001 output.txt noinfo nodebug
}

@test "TDF002 : OCTO90 : DROP FUNCTION should delete db nodes for plans that relied on the dropped function" {
	# Note this test is mostly the same as the "test_create_function/TCF023" subtest.
	# Change to one will need to be done in both places.
	echo "# Run 8 queries from TCF023.sql that use ABS and REPLACE functions" > output.txt
	cp @PROJECT_SOURCE_DIR@/tests/fixtures/TCF023.sql .
	cp @PROJECT_SOURCE_DIR@/tests/fixtures/TDF002.sql .
	octo -vv -f TCF023.sql > run1.txt 2>&1
	echo '# Verify 8 _ydboctoP*.m plans have been generated' >> output.txt
	[[ $(ls -l _ydboctoP*.m | wc -l) -eq 8 ]]
	echo "# Verify ALL 8 queries created new plans" >> output.txt
	grep "execute SQL query" run1.txt >> output.txt
	echo "# Verify db nodes correctly represent ABS and REPLACE functions and plans that rely on them" >> output.txt
	mupip extract run1.ext
	grep plan_metadata run1.ext | grep functions >> output.txt
	echo "# Run DROP FUNCTION of REPLACE" >> output.txt
	octo -f TDF002.sql >> output.txt 2>&1
	echo '# Verify 8 _ydboctoP*.m plans still remain' >> output.txt
	[[ $(ls -l _ydboctoP*.m | wc -l) -eq 8 ]]
	echo "# Verify db nodes corresponding to REPLACE function have been deleted" >> output.txt
	mupip extract run2.ext
	grep plan_metadata run2.ext | grep functions >> output.txt
	verify_output TDF002 output.txt
}

