#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "TOJ01 : Various OUTER JOIN queries (including OCTO363)" {
  cp @PROJECT_SOURCE_DIR@/tests/fixtures/TOJ01.sql .
  yottadb -run genqueryfiles TOJ01.sql	# this generates query files of the form TOJ01_01.sql, TOJ01_02.sql ...
  for file in TOJ01_*.sql
  do
    run_query_in_octo_and_postgres_and_crosscheck names $file "remove_empty_line_at_tail"
  done
}

@test "TOJ02 : LEFT/RIGHT/FULL JOIN on various queries from pastas database" {
  load_fixture pastas.sql
  load_fixture pastas.zwr
  # Below are all queries that were found in the following files.
  #	test_inner_join_order_by.bats.in
  #	test_inner_join_where.bats.in
  #	test_inner_join_where_order_by.bats.in
  # Each of those queries are run with a LEFT or RIGHT or FULL JOIN and the output is compared against Postgres.
  # This simplifies the task of maintaining reference files for these.
  yottadb -run genouterjoinonpastas^genrandomqueries	# this generates queries of the form jointest01.sql, jointest02.sql ...
  # Run using psql and Octo against each of the generated queries
  for file in jointest*.sql
  do
    run_query_in_octo_and_postgres_and_crosscheck pastas $file "remove_empty_line_at_tail"
  done
}

@test "TOJ03 : random outer join queries" {
  load_fixture customers.sql
  load_fixture customers.zwr
  yottadb -run ^genrandomqueries	# this generates a set of queries jointest01.sql, jointest02.sql ...
  # Run using psql and Octo against each of the generated queries
  for file in jointest*.sql
  do
    run_query_in_octo_and_postgres_and_crosscheck customers $file "remove_empty_line_at_tail"
  done
}

@test "TOJ04 : outer join with no ON condition specified" {
  cp @PROJECT_SOURCE_DIR@/tests/fixtures/TOJ04.sql .	# contains only one query
  yottadb -run genqueryfiles TOJ04.sql	# this generates the query file TOJ04_01.sql (only one)
  cat TOJ04_*.sql > output.txt
  octo -f TOJ04_*.sql >> output.txt 2>&1
  verify_output TOJ04 output.txt
}

