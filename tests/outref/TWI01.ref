
-- TWI01 : where with basic in statement

select * from names where firstName in (select firstName from names where firstName="zero" or firstName="Zero");

[ WARN] PATH:LINENUM DATE TIME : Ambiguous column name "FIRSTNAME": qualify name for safe execution
[ WARN] PATH:LINENUM DATE TIME : Ambiguous column name "FIRSTNAME": qualify name for safe execution
[ WARN] PATH:LINENUM DATE TIME : Ambiguous column name "FIRSTNAME": qualify name for safe execution
Added SET and/or Non-SET trigger on ^names named %ydboctoT*
0|Zero|Cool
5|Zero|Cool

;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select * from names where firstName in (select firstName from names where firstName="zero" or firstName="Zero");
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    DO octoPlan2(cursorId)
    DO octoPlan3(cursorId)
    QUIT

octoPlan1(cursorId)
    DO:'$DATA(^%ydboctoocto("xref_status","NAMES","FIRSTNAME")) ^%ydboctoXS6loYoNNto55iv2lHkNkCK(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",5,"","")
    SET %ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")=$GET(%ydboctocursor(cursorId,"parameters",1)) IF ($DATA(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")))'=0) DO
    . SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=""
    . FOR  SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME"),%ydboctocursor(cursorId,"keys",2,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"NAMES","ID")="")  DO
    . . IF 1&($DATA(%ydboctocursor(cursorId,"dupl",%ydboctocursor(cursorId,"keys",2,"NAMES","ID")))=0) DO
    . . . IF $INCREMENT(%ydboctocursor(cursorId,"keys",5,"","",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")))
    . . . SET %ydboctocursor(cursorId,"dupl",%ydboctocursor(cursorId,"keys",2,"NAMES","ID"))=1
    QUIT

octoPlan2(cursorId)
    DO:'$DATA(^%ydboctoocto("xref_status","NAMES","FIRSTNAME")) ^%ydboctoXS6loYoNNto55iv2lHkNkCK(cursorId)
    NEW %ydboctoz
    SET %ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")=$GET(%ydboctocursor(cursorId,"parameters",2)) IF ($DATA(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")))'=0) DO
    . SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=""
    . FOR  SET %ydboctocursor(cursorId,"keys",2,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","FIRSTNAME",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME"),%ydboctocursor(cursorId,"keys",2,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",2,"NAMES","ID")="")  DO
    . . IF 1&($DATA(%ydboctocursor(cursorId,"dupl",%ydboctocursor(cursorId,"keys",2,"NAMES","ID")))=0) DO
    . . . IF $INCREMENT(%ydboctocursor(cursorId,"keys",5,"","",%ydboctocursor(cursorId,"keys",2,"NAMES","FIRSTNAME")))
    . . . SET %ydboctocursor(cursorId,"dupl",%ydboctocursor(cursorId,"keys",2,"NAMES","ID"))=1
    KILL %ydboctocursor(cursorId,"dupl")
    QUIT

octoPlan3(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",8,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . IF 1&(($DATA(%ydboctocursor(cursorId,"keys",5,"","",$PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",2)))'=0)) DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",8,"","")) %ydboctoz=42
    . . SET:1 %ydboctocursor(cursorId,"keys",8,"","",%ydboctocursor(cursorId,"keys",8,"",""))=$GET(%ydboctocursor(cursorId,"keys",8,"","",%ydboctocursor(cursorId,"keys",8,"","")))_%ydboctocursor(cursorId,"keys",1,"NAMES","ID")_"|"_$PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",2)_"|"_$PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",3)
    QUIT
