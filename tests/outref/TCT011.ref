
-- TCT011 : OCTO304 : Type cast operator (`::`) does not work
CREATE FUNCTION DOLLARZWRITE(INTEGER) RETURNS VARCHAR AS $ZWRITE;

select id::integer,ABS(2) from names;
select id::integer,(ABS(2)::text || id::text) from names;
select id::integer,(ABS(2)::numeric + id) from names;
select id::text || id::text,ABS(2)::numeric * id from names;
select id from (select * from names UNION select 6.5::integer,'A','B');
select firstname::integer from names;
select * from names where firstname::integer = id;
select id-2*(id/2::integer) from names;
select id-2*((id/2)::integer) from names;
select DOLLARZWRITE(id)::integer from names;

-- Test typecast to boolean. Occasionally test that `bool` is equivalent to `boolean`
select id::boolean,(ABS(2)::boolean || id::bool) from names;
select id::boolean,(ABS(2)::bool + id) from names;
select id::boolean || id::boolean,ABS(2)::numeric * id from names;
select id::boolean || id::boolean,ABS(2)::boolean * id from names;
select id from (select * from names UNION select 6.5::bool,'A','B');
select * from names where firstname::boolean = id;
select id-2*(id/2::bool) from names;
select id-2*((id/2)::boolean) from names;

0|2
1|2
2|2
3|2
4|2
5|2
0|20
1|21
2|22
3|23
4|24
5|25
0|2
1|3
2|4
3|5
4|6
5|7
00|0
11|2
22|4
33|6
44|8
55|10
0
1
2
3
4
5
6
0
0
0
0
0
0
0|Zero|Cool
0
0
0
0
0
0
0
1
0
1
0
1
0
1
2
3
4
5
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id::boolean,(ABS(2)::boolean || id::bool) from names;
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for arithmetic operations
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id::boolean,(ABS(2)::bool + id) from names;
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id::boolean || id::boolean,ABS(2)::numeric * id from names;
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for || operator
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for arithmetic operations
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id::boolean || id::boolean,ABS(2)::boolean * id from names;
[ERROR] PATH:LINENUM DATE TIME : UNION types INTEGER and BOOLEAN cannot be matched
Error with syntax near (line 1, column 24):

select id from (select * from names UNION select 6.5::bool,'A','B');
                       ^
Error with syntax near (line 1, column 50):

select id from (select * from names UNION select 6.5::bool,'A','B');
                                                 ^^^^^^^^^
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id from (select * from names UNION select 6.5::bool,'A','B');
[ERROR] PATH:LINENUM DATE TIME : Type mismatch: left BOOLEAN, right INTEGER
Error with syntax near (line 1, column 48):

select * from names where firstname::boolean = id;
                                               ^^
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select * from names where firstname::boolean = id;
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for arithmetic operations
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id-2*(id/2::bool) from names;
[ERROR] PATH:LINENUM DATE TIME : Type BOOLEAN not compatible for arithmetic operations
[ERROR] PATH:LINENUM DATE TIME : Error parsing statement: select id-2*((id/2)::boolean) from names;
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id::text || id::text,ABS(2)::numeric * id from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers(((%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))_(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))))_$$str2mval^%ydboctoplanhelpers(((+($$ABS^%ydboctosqlfunctions((+$GET(%ydboctocursor(cursorId,"parameters",1))))))*%ydboctocursor(cursorId,"keys",1,"NAMES","ID")))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select firstname::integer from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers((($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",1))\1))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id-2*(id/2::integer) from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers((%ydboctocursor(cursorId,"keys",1,"NAMES","ID")-((+$GET(%ydboctocursor(cursorId,"parameters",1)))*(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")/(((+$GET(%ydboctocursor(cursorId,"parameters",2))))\1)))))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id::integer,(ABS(2)::text || id::text) from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers(((%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))\1))_$$str2mval^%ydboctoplanhelpers((($$ABS^%ydboctosqlfunctions((+$GET(%ydboctocursor(cursorId,"parameters",1)))))_(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id from (select * from names UNION select 6.5::integer,'A','B');
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    DO octoPlan2(cursorId)
    DO octoPlan3(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",7,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",7,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",7,"","",%ydboctocursor(cursorId,"keys",7,"",""))=$$str2mval^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))_$$str2mval^%ydboctoplanhelpers($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",1))_$$str2mval^%ydboctoplanhelpers($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",2))
    QUIT

octoPlan2(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",8,"","")
    SET %ydboctocursor(cursorId,"keys",3,"OCTOONEROWTABLE","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",3,"OCTOONEROWTABLE","ID")=$ORDER(^%ydboctoocto("tables","octoOneRow",%ydboctocursor(cursorId,"keys",3,"OCTOONEROWTABLE","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",3,"OCTOONEROWTABLE","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",8,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",8,"","",%ydboctocursor(cursorId,"keys",8,"",""))=$$str2mval^%ydboctoplanhelpers((((+$GET(%ydboctocursor(cursorId,"parameters",1))))\1))_$$str2mval^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",2)))_$$str2mval^%ydboctoplanhelpers($GET(%ydboctocursor(cursorId,"parameters",3)))
    DO UNION^%ydboctoplanhelpers(7,8,9)
    QUIT

octoPlan3(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",6,"","")
    SET %ydboctocursor(cursorId,"keys",9,"","")=""
    FOR  SET %ydboctocursor(cursorId,"keys",9,"","")=$ORDER(%ydboctocursor(cursorId,"keys",9,"","",%ydboctocursor(cursorId,"keys",9,"",""))) QUIT:(%ydboctocursor(cursorId,"keys",9,"","")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",6,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",6,"","",%ydboctocursor(cursorId,"keys",6,"",""))=$$str2mval^%ydboctoplanhelpers($$mval2str^%ydboctoplanhelpers($$mvalPiece^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",9,"","",%ydboctocursor(cursorId,"keys",9,"","")),1)))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select * from names where firstname::integer = id;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . SET %ydboctobool=((($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",1))\1)=%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))_$$str2mval^%ydboctoplanhelpers($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",1))_$$str2mval^%ydboctoplanhelpers($PIECE($GET(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))),"|",2))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id::integer,ABS(2) from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers(((%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))\1))_$$str2mval^%ydboctoplanhelpers($$ABS^%ydboctosqlfunctions((+$GET(%ydboctocursor(cursorId,"parameters",1)))))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id-2*((id/2)::integer) from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers((%ydboctocursor(cursorId,"keys",1,"NAMES","ID")-((+$GET(%ydboctocursor(cursorId,"parameters",1)))*(((%ydboctocursor(cursorId,"keys",1,"NAMES","ID")/(+$GET(%ydboctocursor(cursorId,"parameters",2)))))\1))))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select DOLLARZWRITE(id)::integer from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers((($ZWRITE(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")))\1))
    QUIT
;; This is a generated file; do not modify. Generated M code corresponds to below SQL query
;; ---------------------------------------------------------
;  select id::integer,(ABS(2)::numeric + id) from names;
;; ---------------------------------------------------------

octoPlan0(cursorId)
    DO octoPlan1(cursorId)
    QUIT

octoPlan1(cursorId)
    NEW %ydboctoz KILL %ydboctocursor(cursorId,"keys",3,"","")
    SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=""
    FOR  SET %ydboctocursor(cursorId,"keys",1,"NAMES","ID")=$ORDER(^names(%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))) QUIT:(%ydboctocursor(cursorId,"keys",1,"NAMES","ID")="")  DO
    . NEW %ydboctobool SET %ydboctobool=1
    . IF %ydboctobool DO
    . . SET:1&$INCREMENT(%ydboctocursor(cursorId,"keys",3,"","")) %ydboctoz=42
    . . SET %ydboctocursor(cursorId,"keys",3,"","",%ydboctocursor(cursorId,"keys",3,"",""))=$$str2mval^%ydboctoplanhelpers(((%ydboctocursor(cursorId,"keys",1,"NAMES","ID"))\1))_$$str2mval^%ydboctoplanhelpers(((+($$ABS^%ydboctosqlfunctions((+$GET(%ydboctocursor(cursorId,"parameters",1))))))+%ydboctocursor(cursorId,"keys",1,"NAMES","ID")))
    QUIT
