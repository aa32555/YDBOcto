#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "union returns combined rows with no duplicates" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names union select firstName, lastName from names;
OCTO
  run cat output.txt
  [[ "$(grep -c "Zero" output.txt)" == "1" ]]
  [[ "$(grep -c "|" output.txt)" == "5" ]]
}

@test "union all returns combined rows with duplicates" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names union all select firstName, lastName from names;
OCTO
  run cat output.txt
  [[ "$(grep -c "Zero" output.txt)" == "4" ]]
  [[ "$(grep -c "|" output.txt)" == "12" ]]
}

@test "intersect provides items in both sets, with duplicates removed" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names
intersect
select firstName, lastName from names where firstName = "Zero";
OCTO
  # Remove original command so it doesn't screw with grep'ing
  grep -v "OCTO" output.txt > output2.txt
  [[ "$(grep -c "Zero" output2.txt)" == "1" ]]
  [[ "$(grep -c "|" output2.txt)" == "1" ]]
}

@test "intersect provides items in both sets, with duplicates min. from both sets" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names
intersect all
select firstName, lastName from names where firstName = "Zero";
OCTO
  # Remove original command so it doesn't screw with grep'ing
  grep -v "OCTO" output.txt > output2.txt
  [[ "$(grep -c "Zero" output2.txt)" == "2" ]]
  [[ "$(grep -c "|" output2.txt)" == "2" ]]
}

@test "except removed items from second set in the first set" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names
except
select firstName, lastName from names where firstName = "Zero";
OCTO
  # Remove original command so it doesn't screw with grep'ing
  grep -v "OCTO" output.txt > output2.txt
  [[ "$(grep -c "Zero" output2.txt)" == "0" ]]
  [[ "$(grep -c "|" output2.txt)" == "4" ]]
}

@test "except all removed the same count of items from the first set as exist in the second set" {
  octo <<OCTO 2>&1 | tee output.txt
select firstName, lastName from names
except all
select firstName, lastName from names where firstName = "Zero" and id = 0;
OCTO
  # Remove original command so it doesn't screw with grep'ing
  grep -v "OCTO" output.txt > output2.txt
  [[ "$(grep -c "Zero" output2.txt)" == "1" ]]
  [[ "$(grep -c "|" output2.txt)" == "5" ]]
}

@test "simulate outer join using UNION" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT a.id as A_id, b.id as B_id
FROM names a INNER JOIN names b ON a.firstName = b.firstName

UNION

SELECT id as A_id, NULL AS B_id
FROM names a
WHERE a.firstName NOT IN (SELECT b.firstName FROM names b);
OCTO
  [[ "$(grep -c '0|' ./output.txt)" == 2 ]]
}

@test "UNION of tables with different numbers of keys" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT t1.id, t1.firstName, t1.lastName
FROM names t1
INNER JOIN (SELECT * FROM names) t2
ON t1.id = t2.id

UNION ALL

SELECT *
FROM names t1;
OCTO
  [[ "$(grep -c "|" ./output.txt)" == "12" ]]
}

@test "UNION of SELECT and another SET operation" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT *
FROM names n1
INNER JOIN names n2
ON n1.id = n2.id

UNION ALL

(
  SELECT id, firstName, lastName, NULL, NULL, ''
  FROM names

  EXCEPT ALL

  SELECT n1.id, n1.firstName, n1.lastName, ''::integer, NULL, NULL
  FROM names n1
  INNER JOIN names n2
  ON n1.id = n2.id
);
OCTO
  [[ "$(grep -c "|" output.txt)" == "6" ]]
}

@test "OCTO269 : Verify randomly generated queries with UNION/EXCEPT/INTERSECT/UNION ALL/EXCEPT ALL/INTERSECT ALL usages against Postgres" {
  load_fixture easynames.sql
  load_fixture easynames.zwr
  load_postgres_fixture easynames postgres-easynames.sql
  # Next test with complicated randomly generated queries; Crosscheck Octo output against Postgres
  yottadb -run ^gensetqueries	# this generates a max of 20 queries settest01.sql, settest02.sql ...
  # Run using Octo against each of the generated queries
  for file in settest*.sql
  do
    run_query_in_octo_and_postgres_and_crosscheck easynames $file "remove_empty_line_at_head"
  done
}

@test "TSO01 : OCTO273/OCTO326/OCTO327/OCTO328" {
  octo <<OCTO 2>&1 | tee output.txt
(select * from names UNION select * from names) UNION ALL (select * from names UNION select * from names);
(select * from names where id > 1 or id = 0) EXCEPT (select * from names where id < 4 or id = 5);
(select * from names union all select * from names) INTERSECT (select * from names where id < 4);
(select * from (select * from names union select * from names)) union (select * from names);
OCTO
  verify_output TSO01 output.txt
}

@test "TSO02 : OCTO268 : Check if each query in the UNION operator has the same number and/or type of columns" {
  cat <<CAT_EOF > input.sql
(select id        from names) union (select 1+id      from names);
(select id        from names) union (select firstname from names);
(select 1+id      from names) union (select id        from names);
(select 1+id      from names) union (select firstname from names);
(select firstname from names) union (select id        from names);
(select firstname from names) union (select 1+id      from names);
(select id        from names) union (select id,1+id        from names);
(select 1+id      from names) union (select id,firstname   from names);
(select firstname from names) union (select 1+id,id        from names);
(select id        from names) union (select 1+id,firstname from names);
(select 1+id      from names) union (select firstname,id   from names);
(select firstname from names) union (select firstname,1+id from names);
(select id        from names) union (select firstname,lastname,id from names);
(select 1+id      from names) union (select lastname,id,firstname from names);
(select firstname from names) union (select *                     from names);
(select id,1+id        from names) union (select id        from names);
(select id,firstname   from names) union (select 1+id      from names);
(select 1+id,id        from names) union (select firstname from names);
(select 1+id,firstname from names) union (select id        from names);
(select firstname,id   from names) union (select 1+id      from names);
(select firstname,1+id from names) union (select firstname from names);
(select firstname,lastname from names) union (select firstname,1+id from names);
(select * from (select 1+id from names))                                               union (select firstname from names);
(select newid from (select 1+id as newid from names))                                  union (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) union (select firstname from names);
(select firstname from names) union (select * from (select 1+id from names))                                              ;
(select firstname from names) union (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) union (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));
(select id        from names) union all (select 1+id      from names);
(select id        from names) union all (select firstname from names);
(select 1+id      from names) union all (select id        from names);
(select 1+id      from names) union all (select firstname from names);
(select firstname from names) union all (select id        from names);
(select firstname from names) union all (select 1+id      from names);
(select id        from names) union all (select id,1+id        from names);
(select 1+id      from names) union all (select id,firstname   from names);
(select firstname from names) union all (select 1+id,id        from names);
(select id        from names) union all (select 1+id,firstname from names);
(select 1+id      from names) union all (select firstname,id   from names);
(select firstname from names) union all (select firstname,1+id from names);
(select id        from names) union all (select firstname,lastname,id from names);
(select 1+id      from names) union all (select lastname,id,firstname from names);
(select firstname from names) union all (select *                     from names);
(select id,1+id        from names) union all (select id        from names);
(select id,firstname   from names) union all (select 1+id      from names);
(select 1+id,id        from names) union all (select firstname from names);
(select 1+id,firstname from names) union all (select id        from names);
(select firstname,id   from names) union all (select 1+id      from names);
(select firstname,1+id from names) union all (select firstname from names);
(select firstname,lastname from names) union all (select firstname,1+id from names);
(select * from (select 1+id from names))                                               union all (select firstname from names);
(select newid from (select 1+id as newid from names))                                  union all (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) union all (select firstname from names);
(select firstname from names) union all (select * from (select 1+id from names))                                              ;
(select firstname from names) union all (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) union all (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));
(select id        from names) intersect (select 1+id      from names);
(select id        from names) intersect (select firstname from names);
(select 1+id      from names) intersect (select id        from names);
(select 1+id      from names) intersect (select firstname from names);
(select firstname from names) intersect (select id        from names);
(select firstname from names) intersect (select 1+id      from names);
(select id        from names) intersect (select id,1+id        from names);
(select 1+id      from names) intersect (select id,firstname   from names);
(select firstname from names) intersect (select 1+id,id        from names);
(select id        from names) intersect (select 1+id,firstname from names);
(select 1+id      from names) intersect (select firstname,id   from names);
(select firstname from names) intersect (select firstname,1+id from names);
(select id        from names) intersect (select firstname,lastname,id from names);
(select 1+id      from names) intersect (select lastname,id,firstname from names);
(select firstname from names) intersect (select *                     from names);
(select id,1+id        from names) intersect (select id        from names);
(select id,firstname   from names) intersect (select 1+id      from names);
(select 1+id,id        from names) intersect (select firstname from names);
(select 1+id,firstname from names) intersect (select id        from names);
(select firstname,id   from names) intersect (select 1+id      from names);
(select firstname,1+id from names) intersect (select firstname from names);
(select firstname,lastname from names) intersect (select firstname,1+id from names);
(select * from (select 1+id from names))                                               intersect (select firstname from names);
(select newid from (select 1+id as newid from names))                                  intersect (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) intersect (select firstname from names);
(select firstname from names) intersect (select * from (select 1+id from names))                                              ;
(select firstname from names) intersect (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) intersect (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));
(select id        from names) intersect all (select 1+id      from names);
(select id        from names) intersect all (select firstname from names);
(select 1+id      from names) intersect all (select id        from names);
(select 1+id      from names) intersect all (select firstname from names);
(select firstname from names) intersect all (select id        from names);
(select firstname from names) intersect all (select 1+id      from names);
(select id        from names) intersect all (select id,1+id        from names);
(select 1+id      from names) intersect all (select id,firstname   from names);
(select firstname from names) intersect all (select 1+id,id        from names);
(select id        from names) intersect all (select 1+id,firstname from names);
(select 1+id      from names) intersect all (select firstname,id   from names);
(select firstname from names) intersect all (select firstname,1+id from names);
(select id        from names) intersect all (select firstname,lastname,id from names);
(select 1+id      from names) intersect all (select lastname,id,firstname from names);
(select firstname from names) intersect all (select *                     from names);
(select id,1+id        from names) intersect all (select id        from names);
(select id,firstname   from names) intersect all (select 1+id      from names);
(select 1+id,id        from names) intersect all (select firstname from names);
(select 1+id,firstname from names) intersect all (select id        from names);
(select firstname,id   from names) intersect all (select 1+id      from names);
(select firstname,1+id from names) intersect all (select firstname from names);
(select firstname,lastname from names) intersect all (select firstname,1+id from names);
(select * from (select 1+id from names))                                               intersect all (select firstname from names);
(select newid from (select 1+id as newid from names))                                  intersect all (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) intersect all (select firstname from names);
(select firstname from names) intersect all (select * from (select 1+id from names))                                              ;
(select firstname from names) intersect all (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) intersect all (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));
(select id        from names) except (select 1+id      from names);
(select id        from names) except (select firstname from names);
(select 1+id      from names) except (select id        from names);
(select 1+id      from names) except (select firstname from names);
(select firstname from names) except (select id        from names);
(select firstname from names) except (select 1+id      from names);
(select id        from names) except (select id,1+id        from names);
(select 1+id      from names) except (select id,firstname   from names);
(select firstname from names) except (select 1+id,id        from names);
(select id        from names) except (select 1+id,firstname from names);
(select 1+id      from names) except (select firstname,id   from names);
(select firstname from names) except (select firstname,1+id from names);
(select id        from names) except (select firstname,lastname,id from names);
(select 1+id      from names) except (select lastname,id,firstname from names);
(select firstname from names) except (select *                     from names);
(select id,1+id        from names) except (select id        from names);
(select id,firstname   from names) except (select 1+id      from names);
(select 1+id,id        from names) except (select firstname from names);
(select 1+id,firstname from names) except (select id        from names);
(select firstname,id   from names) except (select 1+id      from names);
(select firstname,1+id from names) except (select firstname from names);
(select firstname,lastname from names) except (select firstname,1+id from names);
(select * from (select 1+id from names))                                               except (select firstname from names);
(select newid from (select 1+id as newid from names))                                  except (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) except (select firstname from names);
(select firstname from names) except (select * from (select 1+id from names))                                              ;
(select firstname from names) except (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) except (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));
(select id        from names) except all (select 1+id      from names);
(select id        from names) except all (select firstname from names);
(select 1+id      from names) except all (select id        from names);
(select 1+id      from names) except all (select firstname from names);
(select firstname from names) except all (select id        from names);
(select firstname from names) except all (select 1+id      from names);
(select id        from names) except all (select id,1+id        from names);
(select 1+id      from names) except all (select id,firstname   from names);
(select firstname from names) except all (select 1+id,id        from names);
(select id        from names) except all (select 1+id,firstname from names);
(select 1+id      from names) except all (select firstname,id   from names);
(select firstname from names) except all (select firstname,1+id from names);
(select id        from names) except all (select firstname,lastname,id from names);
(select 1+id      from names) except all (select lastname,id,firstname from names);
(select firstname from names) except all (select *                     from names);
(select id,1+id        from names) except all (select id        from names);
(select id,firstname   from names) except all (select 1+id      from names);
(select 1+id,id        from names) except all (select firstname from names);
(select 1+id,firstname from names) except all (select id        from names);
(select firstname,id   from names) except all (select 1+id      from names);
(select firstname,1+id from names) except all (select firstname from names);
(select firstname,lastname from names) except all (select firstname,1+id from names);
(select * from (select 1+id from names))                                               except all (select firstname from names);
(select newid from (select 1+id as newid from names))                                  except all (select firstname from names);
(select new2id from (select newid+2 as new2id from (select 1+id as newid from names))) except all (select firstname from names);
(select firstname from names) except all (select * from (select 1+id from names))                                              ;
(select firstname from names) except all (select newid from (select 1+id as newid from names))                                 ;
(select firstname from names) except all (select new2id from (select newid+2 as new2id from (select 1+id as newid from names)));

SELECT a.id as A_id, b.id as B_id
FROM names a INNER JOIN names b ON a.firstName = b.firstName
UNION
SELECT id as A_id, "" AS B_id
FROM names a
WHERE a.firstName NOT IN (SELECT b.firstName FROM names b);

SELECT *
FROM names n1
INNER JOIN names n2
ON n1.id = n2.id
UNION ALL
(
  SELECT id, firstName, lastName, '', '', ''
  FROM names
  EXCEPT ALL
  SELECT n1.id, n1.firstName, n1.lastName, '', '', ''
  FROM names n1
  INNER JOIN names n2
  ON n1.id = n2.id
);

CAT_EOF
  cat input.sql > output.txt
  octo -f input.sql >> output.txt 2>&1
  verify_output TSO02 output.txt
}

