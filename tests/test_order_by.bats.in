#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

@test "order by firstName ascending" {
  octo >& output.txt <<OCTO
select * from names order by firstName;
OCTO
  run cat output.txt
  [[ "$output" =~ /1|Acid|Burn.*0|Zero|Cool/ ]]
}

@test "order by firstName ascending explicit" {
  octo >& output.txt <<OCTO
select * from names order by firstName asc;
OCTO
  run cat output.txt
  [[ "$output" =~ /1|Acid|Burn.*0|Zero|Cool/ ]]
}

@test "order by firstName descending" {
  octo >& output.txt <<OCTO
select * from names order by firstName desc;
OCTO
  run cat output.txt
  [[ "$output" =~ /0|Zero|Cool.*1|Acid|Burn/ ]]
}

@test "order by lastName ascending" {
  octo >& output.txt <<OCTO
select * from names order by lastName;
OCTO
  run cat output.txt
  [[ "$output" =~ /1|Acid|Burn.*3|Lord|Nikon/ ]]
}

@test "order by lastName ascending explicit" {
  octo >& output.txt <<OCTO
select * from names order by lastName asc;
OCTO
  run cat output.txt
  [[ "$output" =~ /1|Acid|Burn.*3|Lord|Nikon/ ]]
}

@test "order by lastName descending" {
  octo >& output.txt <<OCTO
select * from names order by lastName desc;
OCTO
  run cat output.txt
  [[ "$output" =~ /3|Lord|Nikon.*1|Acid|Burn/ ]]
}

@test "order by id ascending" {
  octo >& output.txt <<OCTO
select * from names order by id;
OCTO
  run cat output.txt
  [[ "$output" =~ /0|Zero|Cool.*5|Zero|Cool/ ]]
}

@test "order by id ascending explicit" {
  octo >& output.txt <<OCTO
select * from names order by id asc;
OCTO
  run cat output.txt
  [[ "$output" =~ /0|Zero|Cool.*5|Zero|Cool/ ]]
}

@test "order by id descending" {
  octo >& output.txt <<OCTO
select * from names order by id desc;
OCTO
  run cat output.txt
  [[ "$output" =~ /5|Zero|Cool.*0|Zero|Cool/ ]]
}

@test "TOB01 : order by with OR in boolean expression" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT id,firstname FROM names WHERE (id = 0 or id = 1) ORDER BY firstname;
OCTO
  verify_output TOB01 output.txt noinfo nodebug
}

@test "TOB02 : order by with OR and AND in boolean expression" {
  octo <<OCTO 2>&1 | tee output.txt
SELECT id,firstname FROM names WHERE (firstname = "Zero" AND lastname = "Cool") OR (id = 2) ORDER BY firstname;
OCTO
  verify_output TOB02 output.txt noinfo nodebug
}

@test "TOB03 : OCTO332 : order by on column that is an expression using ADDITION on columns from a sub-query" {
  octo <<OCTO 2>&1 | tee output.txt
select 1+id*2 as a from (select id from names) order by a;
OCTO
  verify_output TOB03 output.txt noinfo nodebug
}

@test "TOB04 : OCTO322 : ORDER BY derived column where sub-query does UNION ALL" {
  cat <<CAT > input.sql
  SELECT * from (select * from names) ORDER BY id;
  SELECT * from (select * from names UNION ALL select * from names) ORDER BY id;
  SELECT * from (select firstname from names UNION ALL select lastname from names) ORDER BY firstname;
  SELECT firstname from (select firstname from names UNION ALL select lastname from names) ORDER BY firstname;
  SELECT * from ((select * from names) UNION ALL (select * from names)) namesunion ORDER BY firstname;
  SELECT * from ((select * from names) UNION ALL (select * from names)) namesunion ORDER BY namesunion.firstname;
  SELECT namesunion.firstname from ((select * from names) UNION ALL (select * from names)) namesunion ORDER BY firstname;
  SELECT NULL as computed_id from (select * from names UNION ALL select * from names) ORDER BY computed_id;
  SELECT 1 as computed_id from (select * from names UNION ALL select * from names) ORDER BY computed_id;
  SELECT 1+id*2 as computed_id from (select * from names UNION ALL select * from names) ORDER BY computed_id;
CAT
  cat input.sql > output.txt
  octo -f input.sql >> output.txt 2>&1
  verify_output TOB04 output.txt
}

@test "TOB05 : OCTO334 : ORDER BY ORDER BY on a column with empty string values does not work correctly" {
  cat <<CAT > input.sql
  SELECT lastname,firstname FROM names ORDER BY lastname;
  SELECT lastname,firstname FROM names ORDER BY lastname DESC;
CAT
  cat input.sql > output.txt
  octo -f input.sql >> output.txt 2>&1
  verify_output TOB05 output.txt
}

