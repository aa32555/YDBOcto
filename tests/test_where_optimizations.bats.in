#################################################################
#								#
# Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

load test_helpers

setup() {
  init_test
  createdb
  load_fixture names.sql
  load_fixture names.zwr
}

count_loops() {
  [[ $(grep -c "FOR " $1) -eq $2 ]]
  return
}

@test "simple fixed key optimization" {
  octo >& output.txt <<OCTO
select * from names where id = 2;
OCTO
  run cat output.txt
  [[ "$output" =~ "2|Cereal|Killer" ]]
  ! [[ "$output" =~ "0|Zero|Cool" ]]
  count_loops ./_ydboctoP*.m 0
}

@test "cases that contain OR or AND do not allow optimization to occur" {
  octo >& output.txt <<OCTO
select * from names where id = 2 or firstName = "Zero";
OCTO
  run cat output.txt
  [[ "$output" =~ "2|Cereal|Killer" ]]
  [[ "$output" =~ "0|Zero|Cool" ]]
  ! [[ "$output" =~ "Acid|Burn" ]]
  run grep "FOR " ./*.m
  ! [[ "$output" =~ $S\(.cursor\(.*\)=\"\":\"2\" ]]

}

@test "simple fixed column optimizations" {
  octo >& output.txt <<OCTO
SELECT * FROM names AS t1
CROSS JOIN names AS t2
WHERE t1.id = t2.id;
OCTO
  run cat output.txt
  [[ "$output" =~ "1|Acid|Burn|1|Acid|Burn" ]]
  ! [[ "$output" =~ "0|Zero|Cool|1|Acid|Burn" ]]
  count_loops ./_ydboctoP*.m 1
}

@test "fixed value with chained SQL" {
  octo >& output.txt <<OCTO
select firstName
FROM (
  select * from names as t1
  inner join names as t2
  on t1.id = t2.id
  order by t1.firstName
);
OCTO
  run cat output.txt
  # Success in this test is not crashing
}

@test "fixed column optimiations where second column isn't a key" {
  # This test may be invalid; we can't optimize this without reordering the JOIN's, which
  # we can't do without proper use of the xref
  skip
  octo >& output.txt <<OCTO
SELECT * FROM namesWithAges AS t1
CROSS JOIN namesWithAges AS t2
WHERE t1.id = t2.age;
OCTO
  count_loops ./_ydboctoP*.m 1
}

@test "fixed column optimiations where first column isn't a key" {
  octo >& output.txt <<OCTO
SELECT * FROM namesWithAges AS t1
CROSS JOIN namesWithAges AS t2
WHERE t1.age = t2.id;
OCTO
  count_loops ./_ydboctoP*.m 1
}


@test "three way inner join" {
  octo <<OCTO &> output.txt
SELECT t1.firstName, t2.firstName, t3.firstName
FROM names t1
INNER JOIN names t2
ON t1.id = t2.id
INNER JOIN names t3
ON t2.id = t3.id;
OCTO
  count_loops ./_ydboctoP*.m 1
}

@test "WHERE with AND of EQUALS and NOT EQUAL - postfix" {
  octo >& output.txt <<OCTO
SELECT * FROM names AS t1
CROSS JOIN names AS t2
WHERE t1.id = t2.id
  AND t1.firstName <> 'Charles'
  AND t2.firstName <> 'Charles'
OCTO
  count_loops ./_ydboctoP*.m 1
}

@test "WHERE with AND of EQUALS and NOT EQUAL - prefix" {
  octo >& output.txt <<OCTO
SELECT * FROM names AS t1
CROSS JOIN names AS t2
WHERE t1.firstName <> 'Charles'
  AND t2.firstName <> 'Charles'
  AND t1.id = t2.id
OCTO
  count_loops ./_ydboctoP*.m 1
}

@test "T0002 WHERE with multiple tables and NOT EQUAL" {
  octo<<OCTO &> output.txt
SELECT * FROM namesWithAges AS t1
CROSS JOIN namesWithAges AS t2
CROSS JOIN namesWithAges AS t3
CROSS JOIN namesWithAges AS t4
WHERE t1.age <> -1
  AND t1.age <> 5
  AND t1.age = t2.id
  AND t2.id = t3.id;
OCTO
  count_loops ./_ydboctoP*.m 2
  # verify the output of this
  verify_output T0002 output.txt
}
