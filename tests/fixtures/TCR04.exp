#!/usr/bin/expect
#################################################################
#								#
# Copyright (c) 2021 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

# set huge timeout since on a loaded system it is possible the psql password prompt takes some time to show up
set timeout 60
set port [lindex $argv 0];
spawn /bin/bash
# Enable long lines to prevent wrapping
send -- "stty cols 4096\r"
expect "stty cols 4096\r"
# Start psql
send -- "psql -U ydb -h localhost -p $port\r"
expect -re ".*Password for user ydb: "
send "ydbrocks\r"
expect -re ".*ydb=. "

puts "# Run INSERT INTO query that takes a long time to run so we can Ctrl-C it and verify if CancelRequest processing occurs"
set queryfilename "TCR04.sql"
set queryfile [open "$queryfilename" r]
set query [read $queryfile]
# Send first query which is the INSERT INTO query
send "$query"

# get back to small timeout since we want the below to timeout so we can continue with canceling the query
set timeout 2
expect timeout

puts "# Send interrupt to trigger cancel request"
send \x03
expect -re ".*Cancel request sent\r\n"
expect -re "ERROR:  canceling statement due to user request\r\nydb=. "

puts "# Run another query to verify queries after a Ctrl-C of INSERT INTO work fine and canceled query left db in clean state"
# Bump timeout back to a high value to avoid failures in case next query (that is not canceled) takes more than 2 seconds to run
set timeout 60
send -- "select count(*) from names;\r"
expect -re ".*ydb=. "
send "\\q\r"
expect -re "\[#\$] "
exit
