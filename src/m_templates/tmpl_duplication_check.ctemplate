{}%
/****************************************************************
 *								*
 * Copyright (c) 2019-2020 YottaDB LLC and/or its subsidiaries.	*
 * All rights reserved.						*
 *								*
 *	This source code contains the intellectual property	*
 *	of its copyright holder(s), and is made available	*
 *	under a license.  If you do not know the terms of	*
 *	the license, please stop and do not read further.	*
 *								*
 ****************************************************************/

#include "physical_plan.h"
#include "template_helpers.h"

TEMPLATE(tmpl_duplication_check, PhysicalPlan *plan) {
	TEMPLATE_INIT();

	unsigned int	i;
	SqlKey		*key;

	// Emit this as a series of keys (we do not choose key,value pairs to reduce the chances of a MAXNRSUBSCRIPTS error)
	// Composite keys will be fine because they will be consistently represented
	// Skip cross reference keys, since those will vary; they still have all the
	// required keys, in order, under them anyway

	%{}%%ydboctozduplicate({{ plan->outputKey->unique_id|%d }}{}%
	for (i = 0; i < plan->total_iter_keys; i++) {
		key = plan->iterKeys[i];
		if (key->is_cross_reference_key)
			continue;
		%{},{}%
		/* Check if the table owning this key has all columns set to be treated as NULL (as part of an OUTER JOIN) */
		if (!plan->treat_key_as_null[key->unique_id]) {
			TMPL(tmpl_key, key);
		} else {
			%{}""{}%	/* needs to be replaced with $ZYSQLNULL when #311 is fixed */
		}
	}
	%{}){}%
	TEMPLATE_END();
}
%{}
