{}%
/****************************************************************
 *								*
 * Copyright (c) 2019-2020 YottaDB LLC and/or its subsidiaries.	*
 * All rights reserved.						*
 *								*
 *	This source code contains the intellectual property	*
 *	of its copyright holder(s), and is made available	*
 *	under a license.  If you do not know the terms of	*
 *	the license, please stop and do not read further.	*
 *								*
 ****************************************************************/

#include "physical_plan.h"
#include "template_helpers.h"

TEMPLATE(tmpl_tablejoin_deferred_plans, PhysicalPlan *plan, int dot_count) {
	TEMPLATE_INIT();

	PhysicalPlan	*temp_plan;
	char		*plan_name;

	temp_plan = plan;
	// Run any plans which reference parent queries
	while (NULL != temp_plan->prev)
		temp_plan = temp_plan->prev;
	while (NULL != temp_plan) {
		if (plan == temp_plan->deferred_parent_plan) {
			/* This physical plan references `plan` as the deferred parent plan so emit code to invoke this
			 * physical plan as part of the parent plan.
			 */
			TMPL(tmpl_print_dots, dot_count);
			/* Note that it is possible we encounter multiple physical plans that map to the same logical plan.
			 * In that case, only the first of those physical plans would have had a name generated. So use that for
			 * all the physical plans we go through.
			 */
			plan_name = PHYSICAL_PLAN_NAME(temp_plan);
			assert(NULL != plan_name);
			%{}DO {{ plan_name }}(cursorId)`n{{ PLAN_LINE_START }}{}%
		}
		temp_plan = temp_plan->next;
	}
	TEMPLATE_END();
}
%{}
