{%
/****************************************************************
 *								*
 * Copyright (c) 2019 YottaDB LLC and/or its subsidiaries.	*
 * All rights reserved.						*
 *								*
 *	This source code contains the intellectual property	*
 *	of its copyright holder(s), and is made available	*
 *	under a license.  If you do not know the terms of	*
 *	the license, please stop and do not read further.	*
 *								*
 ****************************************************************/

#include "octo_types.h"

#include "physical_plan.h"
#include "template_helpers.h"


/* This roughly corresponds to half the length of the max M line, which gives us room
 * for the "last" item in on the line before we split it
 */
#define MAX_M_LINE_LENGTH 4096

TEMPLATE(tmpl_column_list_combine, LogicalPlan *plan, PhysicalPlan *pplan, char *delim, int resume, int resume_length) {
	TEMPLATE_INIT();

	char	c;

	while(plan != NULL) {
		assert(plan->type == LP_COLUMN_LIST);

		TMPL(tmpl_print_expression, plan->v.operand[0]->v.operand[0], pplan);
		if(plan->v.operand[1]) {
			if ((0 != resume) && (MAX_M_LINE_LENGTH < (*buffer_index - resume))) {
				c = (*global_buffer)[resume + resume_length];
				(*global_buffer)[resume + resume_length] = '\0';
				%}`n{{*global_buffer + resume}}{%
				(*buffer_index)--;
				(*global_buffer)[resume + resume_length] = c;
				resume = *buffer_index - resume_length + 1;
				%}{{ delim }}{%
			} else {
				%}{{ delim }}{%
			}
		}
		plan = plan->v.operand[1];
	}
	TEMPLATE_END();
}
%}
